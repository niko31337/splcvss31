| eval c31_cvss_vector=split(cvss_vector_string, "/")
| eval c31_cvss_version=mvindex(c31_cvss_vector, 0)
| eval cvss_error=if(len(cvss_vector_string)<1 OR isnull(cvss_vector_string),"no CVSS String supplied (cvss_vector_string empty)", "")
| eval c31_attack_vector=mvindex(split(if(isnotnull(mvfind(c31_cvss_vector, "^AV:.*")), mvindex(c31_cvss_vector, mvfind(c31_cvss_vector, "^AV:*")), "X"), ":"), 1)
| eval c31_attack_complexity=mvindex(split(if(isnotnull(mvfind(c31_cvss_vector, "^AC:.*")), mvindex(c31_cvss_vector, mvfind(c31_cvss_vector, "^AC:*")), "X"), ":"), 1)
| eval c31_privileges_required=mvindex(split(if(isnotnull(mvfind(c31_cvss_vector, "^PR:.*")), mvindex(c31_cvss_vector, mvfind(c31_cvss_vector, "^PR:*")), "X"), ":"), 1)
| eval c31_user_interaction=mvindex(split(if(isnotnull(mvfind(c31_cvss_vector, "UI:.*")), mvindex(c31_cvss_vector, mvfind(c31_cvss_vector, "^UI:.*")), "X"), ":"), 1)
| eval c31_scope=mvindex(split(if(isnotnull(mvfind(c31_cvss_vector, "^S:.*")), mvindex(c31_cvss_vector, mvfind(c31_cvss_vector, "^S:.*")), "X"), ":"), 1)
| eval c31_confidentiality=mvindex(split(if(isnotnull(mvfind(c31_cvss_vector, "^C:.*")), mvindex(c31_cvss_vector, mvfind(c31_cvss_vector, "^C:.*")), "X"), ":"), 1)
| eval c31_integrity=mvindex(split(if(isnotnull(mvfind(c31_cvss_vector, "^I:.*")), mvindex(c31_cvss_vector, mvfind(c31_cvss_vector, "^I:.*")), "X"), ":"), 1)
| eval c31_availability=mvindex(split(if(isnotnull(mvfind(c31_cvss_vector, "^A:.*")), mvindex(c31_cvss_vector, mvfind(c31_cvss_vector, "^A:.*")), "X"), ":"), 1)
| eval c31_exploit_code_maturity=mvindex(split(if(isnotnull(mvfind(c31_cvss_vector, "^E:.*")), mvindex(c31_cvss_vector, mvfind(c31_cvss_vector, "^E:*")), "X"), ":"), 1)
| eval c31_remediation_level=mvindex(split(if(isnotnull(mvfind(c31_cvss_vector, "^RL:.*")), mvindex(c31_cvss_vector, mvfind(c31_cvss_vector, "^RL:.*")), "X"), ":"), 1)
| eval c31_report_confidence=mvindex(split(if(isnotnull(mvfind(c31_cvss_vector, "^RC:.*")), mvindex(c31_cvss_vector, mvfind(c31_cvss_vector, "^RC:.*")), "X"), ":"), 1)
| eval c31_confidentiality_requirement=mvindex(split(if(isnotnull(mvfind(c31_cvss_vector, "^CR:.*")), mvindex(c31_cvss_vector, mvfind(c31_cvss_vector, "^CR:*")), "X"), ":"), 1)
| eval c31_integrity_requirement=mvindex(split(if(isnotnull(mvfind(c31_cvss_vector, "^IR:.*")), mvindex(c31_cvss_vector, mvfind(c31_cvss_vector, "^IR:.*")), "X"), ":"), 1)
| eval c31_availability_requirement=mvindex(split(if(isnotnull(mvfind(c31_cvss_vector, "^AR:.*")), mvindex(c31_cvss_vector, mvfind(c31_cvss_vector, "^AR:.*")), "X"), ":"), 1)
| eval c31_modified_attack_vector=mvindex(split(if(isnotnull(mvfind(c31_cvss_vector, "^MAV:.*")), mvindex(c31_cvss_vector, mvfind(c31_cvss_vector, "^MAV:.*")), "X"), ":"), 1)
| eval c31_modified_attack_complexity=mvindex(split(if(isnotnull(mvfind(c31_cvss_vector, "^MAC:.*")), mvindex(c31_cvss_vector, mvfind(c31_cvss_vector, "^MAC:.*")), "X"), ":"), 1)
| eval c31_modified_privileges_required=mvindex(split(if(isnotnull(mvfind(c31_cvss_vector, "^MPR:.*")), mvindex(c31_cvss_vector, mvfind(c31_cvss_vector, "MPR:.*")), "X"), ":"), 1)
| eval c31_modified_user_interaction=mvindex(split(if(isnotnull(mvfind(c31_cvss_vector, "^MUI:.*")), mvindex(c31_cvss_vector, mvfind(c31_cvss_vector, "^MUI:.*")), "X"), ":"), 1)
| eval c31_modified_scope=mvindex(split(if(isnotnull(mvfind(c31_cvss_vector, "^MS:.*")), mvindex(c31_cvss_vector, mvfind(c31_cvss_vector, "^MS:.*")), "X"), ":"), 1)
| eval c31_modified_confidentiality=mvindex(split(if(isnotnull(mvfind(c31_cvss_vector, "^MC:.*")), mvindex(c31_cvss_vector, mvfind(c31_cvss_vector, "^MC:.*")), "X"), ":"), 1)
| eval c31_modified_integrity=mvindex(split(if(isnotnull(mvfind(c31_cvss_vector, "^MI:.*")), mvindex(c31_cvss_vector, mvfind(c31_cvss_vector, "^MI:.*")), "X"), ":"), 1)
| eval c31_modified_availability=mvindex(split(if(isnotnull(mvfind(c31_cvss_vector, "^MA:.*")), mvindex(c31_cvss_vector, mvfind(c31_cvss_vector, "^MA:.*")), "X"), ":"), 1)



``` check for mandatory values. Triggers when a mandatory field is empty ```
| eval cvss_error=if((c31_attack_vector=="X" OR c31_attack_complexity=="X" OR c31_privileges_required=="X" OR c31_user_interaction=="X" OR c31_scope=="X" OR c31_confidentiality=="X" OR c31_integrity=="X" OR c31_availability=="X"), mvappend(cvss_error, "Base Vector incomplete. AV, PR, UI, S, C, I, A must be set"), cvss_error)


``` check for correct values Base Vector```
| eval cvss_error=if(!(c31_attack_vector=="N" OR c31_attack_vector=="A" OR c31_attack_vector=="L" OR c31_attack_vector=="P"), mvappend(cvss_error, "Attack Vector (AV) with illegal field value. Must be [N|A|L|P] but is " + c31_attack_vector), cvss_error)
| eval cvss_error=if(!(c31_attack_complexity=="L" OR c31_attack_complexity=="H"), mvappend(cvss_error, "Attack Complexity (AC) with illegal field value. Must be [L|H] but is " + c31_attack_complexity), cvss_error)
| eval cvss_error=if(!(c31_privileges_required=="N" OR c31_privileges_required=="L" OR c31_privileges_required=="H"), mvappend(cvss_error, "Privileges Required (PR) with illegal field value. Must be [N|L|H] but is " + c31_privileges_required), cvss_error)
| eval cvss_error=if(!(c31_scope=="U" OR c31_scope=="C"), mvappend(cvss_error, "Scope (S) with illegal field value. Must be [U|C] but is " + c31_scope), cvss_error)
| eval cvss_error=if(!(c31_confidentiality=="H" OR c31_confidentiality=="L" OR c31_confidentiality=="N"), mvappend(cvss_error, "Confidentiality (C) with illegal field value. Must be [H|L|N] but is " + c31_confidentiality), cvss_error)
| eval cvss_error=if(!(c31_integrity=="H" OR c31_integrity=="L" OR c31_integrity=="N"), mvappend(cvss_error, "Integrity (I) with illegal field value. Must be [H|L|N] but is " + c31_integrity), cvss_error)
| eval cvss_error=if(!(c31_availability=="H" OR c31_availability=="L" OR c31_availability=="N"), mvappend(cvss_error, "Availability (A) with illegal field value. Must be [H|L|N] but is " + c31_availability), cvss_error)

``` check for correct temporal vertor values ```
| eval cvss_error=if(!(c31_exploit_code_maturity=="X" OR c31_exploit_code_maturity=="H" OR c31_exploit_code_maturity=="F" OR c31_exploit_code_maturity=="P" OR c31_exploit_code_maturity=="U"), mvappend(cvss_error, "Exploit Code Maturity (E) with illegal field value. Must be [X|H|F|P|U] but is " + c31_exploit_code_maturity), cvss_error)
| eval cvss_error=if(!(c31_remediation_level=="X" OR c31_remediation_level=="U" OR c31_remediation_level=="W" OR c31_remediation_level=="T" OR c31_remediation_level=="O"), mvappend(cvss_error, "Remediation Level (RL) with illegal field value. Must be [X|U|W|T|O] but is " + c31_remediation_level), cvss_error)
| eval cvss_error=if(!(c31_report_confidence=="X" OR c31_report_confidence=="C" OR c31_report_confidence=="R" OR c31_report_confidence=="U"), mvappend(cvss_error, "Report Confidence (RC) with illegal field value. Must be [X|C|R|U] but is " + c31_report_confidence), cvss_error)


``` check for correct environmental vector values ```
| eval cvss_error=if(!(c31_confidentiality_requirement=="X" OR c31_confidentiality_requirement=="H" OR c31_confidentiality_requirement=="M" OR c31_confidentiality_requirement=="L"), mvappend(cvss_error, "Confidentiality Requirement (C) with illegal field value. Must be [X|H|M|L] but is " + c31_confidentiality_requirement), cvss_error)
| eval cvss_error=if(!(c31_integrity_requirement=="X" OR c31_integrity_requirement=="H" OR c31_integrity_requirement=="M" OR c31_integrity_requirement=="L"), mvappend(cvss_error, "Integrity Requirement (I) with illegal field value. Must be [X|H|M|L] but is " + c31_integrity_requirement), cvss_error)
| eval cvss_error=if(!(c31_availability_requirement=="X" OR c31_availability_requirement=="H" OR c31_availability_requirement=="M" OR c31_availability_requirement=="L"), mvappend(cvss_error, "Availability Requirement (A) with illegal field value. Must be [X|H|M|L] but is " + c31_availability_requirement), cvss_error)
| eval cvss_error=if(!(c31_modified_attack_vector=="X" OR c31_modified_attack_vector=="N" OR c31_modified_attack_vector=="A" OR c31_modified_attack_vector=="L" OR c31_modified_attack_vector=="P"), mvappend(cvss_error, "Modified Attack Vector (MAV) with illegal field value. Must be [X|N|A|L|P] but is " + c31_modified_attack_vector), cvss_error)
| eval cvss_error=if(!(c31_modified_attack_complexity=="X" OR c31_modified_attack_complexity=="L" OR c31_modified_attack_complexity=="H"), mvappend(cvss_error, "Modified Attack Vector (MAV) with illegal field value. Must be [X|L|H] but is " + c31_modified_attack_complexity), cvss_error)
| eval cvss_error=if(!(c31_modified_privileges_required=="X" OR c31_modified_privileges_required=="N" OR c31_modified_privileges_required=="L" OR c31_modified_privileges_required=="H"), mvappend(cvss_error, "Modified Privileges Required (MPR) with illegal field value. Must be [X|N|L|H] but is " + c31_modified_privileges_required), cvss_error)
| eval cvss_error=if(!(c31_modified_user_interaction=="X" OR c31_modified_user_interaction=="N" OR c31_modified_user_interaction=="R"), mvappend(cvss_error, "Modified User Interaction (MUI) with illegal field value. Must be [X|N|R] but is " + c31_modified_user_interaction), cvss_error)
| eval cvss_error=if(!(c31_modified_scope=="X" OR c31_modified_scope=="U" OR c31_modified_scope=="C"), mvappend(cvss_error, "Modified Scope (MS) with illegal field value. Must be [X|U|C] but is " + c31_modified_scope), cvss_error)
| eval cvss_error=if(!(c31_modified_confidentiality=="X" OR c31_modified_confidentiality=="L" OR c31_modified_confidentiality=="N" OR c31_modified_confidentiality=="H"), mvappend(cvss_error, "Modified Confidentiality (MC) with illegal field value. Must be [X|N|L|H] but is " + c31_modified_confidentiality), cvss_error)
| eval cvss_error=if(!(c31_modified_integrity=="X" OR c31_modified_integrity=="L" OR c31_modified_integrity=="N" OR c31_modified_integrity=="H"), mvappend(cvss_error, "Modified Integrity (MI) with illegal field value. Must be [X|N|L|H] but is " + c31_modified_integrity), cvss_error)
| eval cvss_error=if(!(c31_modified_availability=="X" OR c31_modified_availability=="H" OR c31_modified_availability=="L" OR c31_modified_availability=="N" OR c31_modified_availability=="N"), mvappend(cvss_error, "Modified Availability (MA) with illegal field value. Must be [X|N|L|H] but is " + c31_modified_availability), cvss_error)

``` do not output an environmental score if there is no change at all
Note: we still need to set them to make sure our calculations work```
| eval c31_omit_environmental_score = if(  (isnull(c31_modified_attack_vector) OR c31_modified_attack_vector=="X") AND (isnull(c31_modified_attack_complexity) OR c31_modified_attack_complexity=="X") AND (isnull(c31_modified_privileges_required) OR c31_modified_privileges_required=="X") AND (isnull(c31_modified_user_interaction) OR c31_modified_user_interaction="X") AND (isnull(c31_modified_confidentiality) OR c31_modified_confidentiality=="X") AND (isnull(c31_modified_integrity) OR c31_modified_integrity=="X") AND (isnull(c31_modified_availability) OR c31_modified_availability=="X") AND (isnull(c31_confidentiality_requirement) OR c31_confidentiality_requirement=="X") AND (isnull(c31_integrity_requirement) OR c31_integrity_requirement=="X") AND (isnull(c31_availability_requirement) OR c31_availability_requirement=="X"), "true", "false")

``` defaults for optional vector parts ```
| eval c31_exploit_code_maturity=if(isnull(c31_exploit_code_maturity) OR c31_exploit_code_maturity="X", "N", c31_exploit_code_maturity)
| eval c31_remediation_level=if(isnull(c31_remediation_level) OR c31_remediation_level=="X", "N", c31_remediation_level)
| eval c31_report_confidence=if(isnull(c31_report_confidence) OR c31_report_confidence=="X", "N", c31_report_confidence)
| eval c31_confidentiality_requirement=if(isnull(c31_confidentiality_requirement) OR c31_confidentiality_requirement=="X", "X", c31_confidentiality_requirement)
| eval c31_integrity_requirement=if(isnull(c31_integrity_requirement), "X", c31_integrity_requirement)
| eval c31_availability_requirement=if(isnull(c31_availability_requirement), "X", c31_availability_requirement)
| eval c31_modified_attack_vector=if(isnull(c31_modified_attack_vector) OR c31_modified_attack_vector=="X", c31_attack_vector, c31_modified_attack_vector)
| eval c31_modified_attack_complexity=if(isnull(c31_modified_attack_complexity)  OR c31_modified_attack_complexity=="X", c31_attack_complexity, c31_modified_attack_complexity)
| eval c31_modified_privileges_required=if(isnull(c31_modified_privileges_required) OR c31_modified_privileges_required=="X", c31_privileges_required, c31_modified_privileges_required)
| eval c31_modified_scope=if(isnull(c31_modified_scope) OR c31_modified_scope=="X", c31_scope, c31_modified_scope)
| eval c31_modified_confidentiality=if(isnull(c31_modified_confidentiality) OR c31_modified_confidentiality=="X", c31_confidentiality, c31_modified_confidentiality)
| eval c31_modified_user_interaction=if(isnull(c31_modified_user_interaction) OR c31_modified_user_interaction=="X" , c31_user_interaction, c31_modified_user_interaction)
| eval c31_modified_integrity=if(isnull(c31_modified_integrity) OR c31_modified_integrity=="X", c31_integrity, c31_modified_integrity)
| eval c31_modified_availability=if(isnull(c31_modified_availability) OR c31_modified_availability=="X", c31_availability, c31_modified_availability)


``` Value definitions according to standard ```
| eval v_attack_vector=mvappend("N:0.85", "A:0.62", "L:0.55", "P:0.2")
| eval v_modified_attack_vector=mvappend("N:0.85", "A:0.62", "L:0.55", "P:0.2")
| eval v_attack_complexity=mvappend("L:0.77", "H:0.44")
| eval v_modified_attack_complexity=mvappend("L:0.77", "H:0.44")
| eval v_privileges_required=mvappend("N:0.85", if(c31_scope=="C", "L:0.68", "L:0.62"),  if(c31_scope=="C", "H:0.5", "H:0.27"))
| eval v_modified_privileges_required=mvappend("N:0.85", if(c31_scope=="C", "L:0.68", "L:0.62"),  if(c31_scope=="C", "H:0.5", "H:0.27"))
| eval v_user_interaction=mvappend("N:0.85", "R:0.62")
| eval v_modified_user_interaction=mvappend("N:0.85", "R:0.62")
| eval v_confidentiality=mvappend("H:0.56", "L:0.22", "N:0")
| eval v_modified_confidentiality=mvappend("H:0.56", "L:0.22", "N:0.0")
| eval v_integrity=mvappend("H:0.56", "L:0.22", "N:0.0")
| eval v_modified_integrity=mvappend("H:0.56", "L:0.22", "N:0.0")
| eval v_availability=mvappend("H:0.56", "L:0.22", "N:0.0")
| eval v_modified_availability=mvappend("H:0.56", "L:0.22", "N:0.0")
| eval v_exploit_code_maturity=mvappend("N:1.0", "H:1.0", "F:0.97", "P:0.94", "U:0.91")
| eval v_remediation_level=mvappend("N:1.0", "U:1.0", "W:0.97", "T:0.96", "O:0.95")
| eval v_report_confidence=mvappend("N:1.0", "C:1.0", "R:0.96", "U:0.92")
| eval v_confidentiality_requirement=mvappend("X:1.0", "H:1.5", "M:1.0", "L:0.5")
| eval v_integrity_requirement=mvappend("X:1.0", "H:1.5", "M:1.0", "L:0.5")
| eval v_availability_requirement=mvappend("X:1.0", "H:1.5", "M:1.0", "L:0.5")

``` Score Calculation ```


```Impact Sub Score```
| eval c31_iss = exact(1.0 - (
                     ( 1.0-tonumber(mvindex(split(mvindex(v_confidentiality, mvfind(v_confidentiality, c31_confidentiality)), ":"),1)))
                     *
                     (1.0-tonumber(mvindex(split(mvindex(v_integrity, mvfind(v_integrity, c31_integrity)), ":"),1)))
                     *
                     (1.0-tonumber(mvindex(split(mvindex(v_availability, mvfind(v_availability, c31_availability)), ":"),1))) ))
``` Impact ```
| eval a_impact = if(c31_scope=="U", exact(6.42*c31_iss), exact(7.52*(c31_iss-0.029)-3.25*pow((c31_iss-0.02),15)))

``` Exploitability ```
| eval a_av=tonumber(mvindex(split(mvindex(v_attack_vector, mvfind(v_attack_vector, c31_attack_vector)), ":"),1))
| eval a_ac=tonumber(mvindex(split(mvindex(v_attack_complexity, mvfind(v_attack_complexity, c31_attack_complexity)), ":"),1))
| eval a_pr=tonumber(mvindex(split(mvindex(v_privileges_required, mvfind(v_privileges_required, c31_privileges_required)), ":"),1))
| eval a_ui=tonumber(mvindex(split(mvindex(v_user_interaction, mvfind(v_user_interaction, c31_user_interaction)), ":"),1))
| eval a_exploitability = exact(8.22*a_av*a_ac*a_pr*a_ui)

``` Base Score Calculation ```
``` we need to do some weired tricks to make sure 4.02 becomes 4.1 and 4.00 becomes 4.0.
See https://www.first.org/cvss/specification-document Appendix A Floating Point Rounding
whenever you read the 100000s - thats the reason....

here is an easier to understand example:
| makeresults
| eval calc_score=8.66112
| eval roundup=if((calc_score*100000)%10000==0, (calc_score*100000)/100000.0, (floor(((calc_score*100000))/10000)+1)/10.0)


```
| eval a_unchanged_scope_base_score=if(((a_impact+a_exploitability)*100000)%10000==0, ((a_impact+a_exploitability)*100000)/100000.0, (floor(((a_impact+a_exploitability)*100000)/10000)+1)/10.0)
| eval a_changed_scope_base_score=if((1.08*((a_impact+a_exploitability)*100000))%10000==0, ((1.08*(a_impact+a_exploitability))*100000)/100000.0, (floor(((1.08*(a_impact+a_exploitability))*100000)/10000)+1)/10.0)


| eval a_basescore = if(a_impact<=0,0, if(c31_scope=="U", if(a_unchanged_scope_base_score<=10.0, a_unchanged_scope_base_score, 10.0), if(a_changed_scope_base_score<=10.0, a_changed_scope_base_score, 10.0)))


``` we have the base score now ```
| eval base_score=a_basescore


``` temporal score ```
| eval a_ecm=tonumber(mvindex(split(mvindex(v_exploit_code_maturity, mvfind(v_exploit_code_maturity, c31_exploit_code_maturity)), ":"),1))
| eval a_rl=tonumber(mvindex(split(mvindex(v_remediation_level, mvfind(v_remediation_level, c31_remediation_level)), ":"),1))
| eval a_rc=tonumber(mvindex(split(mvindex(v_report_confidence, mvfind(v_report_confidence, c31_report_confidence)), ":"),1))
| eval a_basescore_ecm_rl_rc=base_score*a_ecm*a_rl*a_rc

| eval a_temporal_score = if(((a_basescore_ecm_rl_rc)*100000)%10000==0, ((a_basescore_ecm_rl_rc)*100000)/100000.0, (floor(((a_basescore_ecm_rl_rc)*100000)/10000)+1)/10.0)

| eval temporal_score=a_temporal_score


``` Environmental Score ```
``` modified impact sub-score MISS```
| eval a_c=tonumber(mvindex(split(mvindex(v_confidentiality, mvfind(v_confidentiality, c31_confidentiality)), ":"),1))
| eval a_i=tonumber(mvindex(split(mvindex(v_integrity, mvfind(v_integrity, c31_integrity)), ":"),1))
| eval a_a=tonumber(mvindex(split(mvindex(v_availability, mvfind(v_availability, c31_availability)), ":"),1))
| eval a_mc=tonumber(mvindex(split(mvindex(v_modified_confidentiality, mvfind(v_modified_confidentiality, c31_modified_confidentiality)), ":"),1))
| eval a_mi=tonumber(mvindex(split(mvindex(v_modified_integrity, mvfind(v_modified_integrity, c31_modified_integrity)), ":"),1))
| eval a_ma=tonumber(mvindex(split(mvindex(v_modified_availability, mvfind(v_modified_availability, c31_modified_availability)), ":"),1))

| eval a_mav=tonumber(mvindex(split(mvindex(v_modified_attack_vector, mvfind(v_modified_attack_vector, c31_modified_attack_vector)), ":"),1))
| eval a_mac=tonumber(mvindex(split(mvindex(v_modified_attack_complexity, mvfind(v_modified_attack_complexity, c31_modified_attack_complexity)), ":"),1))
| eval a_mpr=tonumber(mvindex(split(mvindex(v_modified_privileges_required, mvfind(v_modified_privileges_required, c31_modified_privileges_required)), ":"),1))
| eval a_mui=tonumber(mvindex(split(mvindex(v_modified_user_interaction, mvfind(v_modified_user_interaction, c31_modified_user_interaction)), ":"),1))
| eval a_cr=tonumber(mvindex(split(mvindex(v_confidentiality_requirement, mvfind(v_confidentiality_requirement, c31_confidentiality_requirement)), ":"),1))
| eval a_ir=tonumber(mvindex(split(mvindex(v_integrity_requirement, mvfind(v_integrity_requirement, c31_integrity_requirement)), ":"),1))
| eval a_ar=tonumber(mvindex(split(mvindex(v_availability_requirement, mvfind(v_availability_requirement, c31_availability_requirement)), ":"),1))


| eval a_miss_float = exact( 1 - (1 - a_cr*a_mc) * (1 - a_ir*a_mi) * (1 - a_ar*a_ma))


| eval a_miss = if(a_miss_float<0.915, a_miss_float, 0.915)
| eval a_modified_impact = if(c31_scope=="U", exact(6.42*a_miss), exact(7.52*(a_miss-0.029)-3.25*pow((a_miss*0.9731-0.02),13)))
| eval a_modified_exploitability = exact(8.22*a_mav*a_mac*a_mpr*a_mui)

``` we calculate both, for situations where scope has changed and where not
otherwise the if-clauses become hell....
```

``` environmental vector calc if Scope has NOT changed ```
| eval a_mi_me_sum = a_modified_impact+a_modified_exploitability
| eval a_mi_me_sum_min = if(a_mi_me_sum<10.0, a_mi_me_sum, 10.0)
| eval a_mi_me_sum_min_ru = if((a_mi_me_sum_min*100000)%10000==0, (a_mi_me_sum_min*100000)/100000.0, (floor(((a_mi_me_sum_min*100000))/10000)+1)/10.0)
| eval a_mi_me_sum_min_ru_ecm_rl_rc = a_mi_me_sum_min_ru * a_ecm * a_rl * a_rc
| eval a_mi_me_sum_min_ru_ecm_rl_rc_ru = if((a_mi_me_sum_min_ru_ecm_rl_rc*100000)%10000==0, (a_mi_me_sum_min_ru_ecm_rl_rc*100000)/100000.0, (floor(((a_mi_me_sum_min_ru_ecm_rl_rc*100000))/10000)+1)/10.0)

``` environmental vector calc if Scope has changed ```
| eval a_108_mi_me_sum = 1.08*(a_modified_impact+a_modified_exploitability)
| eval a_108_mi_me_sum_min = if(a_108_mi_me_sum<10.0, a_108_mi_me_sum, 10.0)
| eval a_108_mi_me_sum_min_ru = if((a_108_mi_me_sum_min*100000)%10000==0, (a_108_mi_me_sum_min*100000)/100000.0, (floor(((a_108_mi_me_sum_min*100000))/10000)+1)/10.0)
| eval a_108_mi_me_sum_min_ru_ecm_rl_rc = a_108_mi_me_sum_min_ru * a_ecm * a_rl * a_rc
| eval a_108_mi_me_sum_min_ru_ecm_rl_rc_ru = if((a_108_mi_me_sum_min_ru_ecm_rl_rc*100000)%10000==0, (a_108_mi_me_sum_min_ru_ecm_rl_rc*100000)/100000.0, (floor(((a_108_mi_me_sum_min_ru_ecm_rl_rc*100000))/10000)+1)/10.0)



| eval a_environmental_score = if(a_modified_impact<=0, 0, if(c31_modified_scope=="U", a_mi_me_sum_min_ru_ecm_rl_rc_ru, a_108_mi_me_sum_min_ru_ecm_rl_rc_ru))


| eval a_environmental_score = if(c31_omit_environmental_score=="true", "", a_environmental_score)

| eval environmental_score=a_environmental_score

| eval final_cvss31_score = case(environmental_score>=0.0, environmental_score,
                               temporal_score>=0.0, temporal_score,
                               1=1, base_score)

| eval main_score=final_cvss31_score
| eval main_score=round(main_score, 1)
```do not score 10.0 if there is no cvss vector at all ```
| eval main_score=if(mvfind(cvss_error, ".*cvss_vector_string empty.*")>=0, "", main_score)
| eval main_rating=case(main_score==0.0, "None", main_score>=0.1 AND main_score<=3.9, "Low", main_score>=4.0 AND main_score<=6.9, "Medium", main_score>=7.0 AND main_score<=8.9, "High", main_score>=4.0 AND main_score<=10.0, "Critical", 1=1, "")
| fields - a_*, v_*, c31_*
